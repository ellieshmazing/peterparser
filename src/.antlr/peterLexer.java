// Generated from c://Users//ellie//OneDrive//Desktop//Fall 2023//POPL//Parser Project//src//peterLexer.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class peterLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		SERIAL=1, INTEGER=2, FLOAT=3, CHAR=4, ID=5, STRING=6, ADD=7, SUB=8, MULT=9, 
		DIV=10, MOD=11, ASN=12, ADDASN=13, SUBASN=14, MULTASN=15, DIVASN=16, LT=17, 
		LTE=18, GT=19, GTE=20, EQUIV=21, NEQUIV=22, IF=23, ELSE=24, ELIF=25, WHILE=26, 
		FOR=27, AND=28, OR=29, NOT=30, OPENBRACK=31, CLOSEBRACK=32, OPENPAREN=33, 
		CLOSEPAREN=34, LINECMT=35, BLCKCMT=36, SPACE=37, WHITESPACE=38, NEWLINE=39;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"COMMA", "SERIAL", "DIGIT", "INTEGER", "FLOAT", "LETTER", "CHAR", "ID", 
			"STRING", "ADD", "SUB", "MULT", "DIV", "MOD", "ASN", "ADDASN", "SUBASN", 
			"MULTASN", "DIVASN", "LT", "LTE", "GT", "GTE", "EQUIV", "NEQUIV", "IF", 
			"ELSE", "ELIF", "WHILE", "FOR", "AND", "OR", "NOT", "OPENBRACK", "CLOSEBRACK", 
			"OPENPAREN", "CLOSEPAREN", "LINECMT", "BLCKCMT", "SPACE", "WHITESPACE", 
			"NEWLINE"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, null, null, null, "'+'", "'-'", "'*'", "'/'", 
			"'%'", "'='", "'+='", "'-='", "'*='", "'/='", "'<'", "'<='", "'>'", "'>+'", 
			"'=='", "'!='", "'if'", "'else'", "'elif'", "'while'", "'for'", "'and'", 
			"'or'", "'not'", "'['", "']'", "'('", "')'", "'#'", "'''''", "' '", "'\\t'", 
			"'\\n'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "SERIAL", "INTEGER", "FLOAT", "CHAR", "ID", "STRING", "ADD", "SUB", 
			"MULT", "DIV", "MOD", "ASN", "ADDASN", "SUBASN", "MULTASN", "DIVASN", 
			"LT", "LTE", "GT", "GTE", "EQUIV", "NEQUIV", "IF", "ELSE", "ELIF", "WHILE", 
			"FOR", "AND", "OR", "NOT", "OPENBRACK", "CLOSEBRACK", "OPENPAREN", "CLOSEPAREN", 
			"LINECMT", "BLCKCMT", "SPACE", "WHITESPACE", "NEWLINE"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public peterLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "peterLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\'\u00e2\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003"+
		"\u0004\u0003^\b\u0003\u000b\u0003\f\u0003_\u0001\u0004\u0005\u0004c\b"+
		"\u0004\n\u0004\f\u0004f\t\u0004\u0001\u0004\u0001\u0004\u0004\u0004j\b"+
		"\u0004\u000b\u0004\f\u0004k\u0001\u0005\u0003\u0005o\b\u0005\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0004\u0007x\b\u0007\u000b\u0007\f\u0007y\u0001\b\u0001\b\u0005\b~\b"+
		"\b\n\b\f\b\u0081\t\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001"+
		"\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0010"+
		"\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012"+
		"\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015"+
		"\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017"+
		"\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019"+
		"\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a"+
		"\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001c"+
		"\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001d"+
		"\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001e"+
		"\u0001\u001e\u0001\u001f\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001 "+
		"\u0001 \u0001!\u0001!\u0001\"\u0001\"\u0001#\u0001#\u0001$\u0001$\u0001"+
		"%\u0001%\u0001&\u0001&\u0001&\u0001&\u0001\'\u0001\'\u0001(\u0001(\u0001"+
		")\u0001)\u0000\u0000*\u0001\u0000\u0003\u0001\u0005\u0000\u0007\u0002"+
		"\t\u0003\u000b\u0000\r\u0004\u000f\u0005\u0011\u0006\u0013\u0007\u0015"+
		"\b\u0017\t\u0019\n\u001b\u000b\u001d\f\u001f\r!\u000e#\u000f%\u0010\'"+
		"\u0011)\u0012+\u0013-\u0014/\u00151\u00163\u00175\u00187\u00199\u001a"+
		";\u001b=\u001c?\u001dA\u001eC\u001fE G!I\"K#M$O%Q&S\'\u0001\u0000\u0003"+
		"\u0001\u000009\u0002\u0000AZaz\u0001\u0000\"\"\u00e5\u0000\u0003\u0001"+
		"\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000"+
		"\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000"+
		"\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000"+
		"\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000"+
		"\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000"+
		"\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000"+
		"\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000"+
		"%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000"+
		"3\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001"+
		"\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000"+
		"\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000"+
		"A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001"+
		"\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000"+
		"\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M\u0001\u0000\u0000\u0000\u0000"+
		"O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000\u0000\u0000\u0000S\u0001"+
		"\u0000\u0000\u0000\u0001U\u0001\u0000\u0000\u0000\u0003W\u0001\u0000\u0000"+
		"\u0000\u0005Z\u0001\u0000\u0000\u0000\u0007]\u0001\u0000\u0000\u0000\t"+
		"d\u0001\u0000\u0000\u0000\u000bn\u0001\u0000\u0000\u0000\rp\u0001\u0000"+
		"\u0000\u0000\u000fw\u0001\u0000\u0000\u0000\u0011{\u0001\u0000\u0000\u0000"+
		"\u0013\u0084\u0001\u0000\u0000\u0000\u0015\u0086\u0001\u0000\u0000\u0000"+
		"\u0017\u0088\u0001\u0000\u0000\u0000\u0019\u008a\u0001\u0000\u0000\u0000"+
		"\u001b\u008c\u0001\u0000\u0000\u0000\u001d\u008e\u0001\u0000\u0000\u0000"+
		"\u001f\u0090\u0001\u0000\u0000\u0000!\u0093\u0001\u0000\u0000\u0000#\u0096"+
		"\u0001\u0000\u0000\u0000%\u0099\u0001\u0000\u0000\u0000\'\u009c\u0001"+
		"\u0000\u0000\u0000)\u009e\u0001\u0000\u0000\u0000+\u00a1\u0001\u0000\u0000"+
		"\u0000-\u00a3\u0001\u0000\u0000\u0000/\u00a6\u0001\u0000\u0000\u00001"+
		"\u00a9\u0001\u0000\u0000\u00003\u00ac\u0001\u0000\u0000\u00005\u00af\u0001"+
		"\u0000\u0000\u00007\u00b4\u0001\u0000\u0000\u00009\u00b9\u0001\u0000\u0000"+
		"\u0000;\u00bf\u0001\u0000\u0000\u0000=\u00c3\u0001\u0000\u0000\u0000?"+
		"\u00c7\u0001\u0000\u0000\u0000A\u00ca\u0001\u0000\u0000\u0000C\u00ce\u0001"+
		"\u0000\u0000\u0000E\u00d0\u0001\u0000\u0000\u0000G\u00d2\u0001\u0000\u0000"+
		"\u0000I\u00d4\u0001\u0000\u0000\u0000K\u00d6\u0001\u0000\u0000\u0000M"+
		"\u00d8\u0001\u0000\u0000\u0000O\u00dc\u0001\u0000\u0000\u0000Q\u00de\u0001"+
		"\u0000\u0000\u0000S\u00e0\u0001\u0000\u0000\u0000UV\u0005,\u0000\u0000"+
		"V\u0002\u0001\u0000\u0000\u0000WX\u0003\u0001\u0000\u0000XY\u0003O\'\u0000"+
		"Y\u0004\u0001\u0000\u0000\u0000Z[\u0007\u0000\u0000\u0000[\u0006\u0001"+
		"\u0000\u0000\u0000\\^\u0003\u0005\u0002\u0000]\\\u0001\u0000\u0000\u0000"+
		"^_\u0001\u0000\u0000\u0000_]\u0001\u0000\u0000\u0000_`\u0001\u0000\u0000"+
		"\u0000`\b\u0001\u0000\u0000\u0000ac\u0003\u0005\u0002\u0000ba\u0001\u0000"+
		"\u0000\u0000cf\u0001\u0000\u0000\u0000db\u0001\u0000\u0000\u0000de\u0001"+
		"\u0000\u0000\u0000eg\u0001\u0000\u0000\u0000fd\u0001\u0000\u0000\u0000"+
		"gi\u0005.\u0000\u0000hj\u0003\u0005\u0002\u0000ih\u0001\u0000\u0000\u0000"+
		"jk\u0001\u0000\u0000\u0000ki\u0001\u0000\u0000\u0000kl\u0001\u0000\u0000"+
		"\u0000l\n\u0001\u0000\u0000\u0000mo\u0007\u0001\u0000\u0000nm\u0001\u0000"+
		"\u0000\u0000o\f\u0001\u0000\u0000\u0000pq\u0005\'\u0000\u0000qr\u0003"+
		"\u000b\u0005\u0000rs\u0005\'\u0000\u0000s\u000e\u0001\u0000\u0000\u0000"+
		"tx\u0003\u000b\u0005\u0000ux\u0003\u0005\u0002\u0000vx\u0005_\u0000\u0000"+
		"wt\u0001\u0000\u0000\u0000wu\u0001\u0000\u0000\u0000wv\u0001\u0000\u0000"+
		"\u0000xy\u0001\u0000\u0000\u0000yw\u0001\u0000\u0000\u0000yz\u0001\u0000"+
		"\u0000\u0000z\u0010\u0001\u0000\u0000\u0000{\u007f\u0005\"\u0000\u0000"+
		"|~\b\u0002\u0000\u0000}|\u0001\u0000\u0000\u0000~\u0081\u0001\u0000\u0000"+
		"\u0000\u007f}\u0001\u0000\u0000\u0000\u007f\u0080\u0001\u0000\u0000\u0000"+
		"\u0080\u0082\u0001\u0000\u0000\u0000\u0081\u007f\u0001\u0000\u0000\u0000"+
		"\u0082\u0083\u0005\"\u0000\u0000\u0083\u0012\u0001\u0000\u0000\u0000\u0084"+
		"\u0085\u0005+\u0000\u0000\u0085\u0014\u0001\u0000\u0000\u0000\u0086\u0087"+
		"\u0005-\u0000\u0000\u0087\u0016\u0001\u0000\u0000\u0000\u0088\u0089\u0005"+
		"*\u0000\u0000\u0089\u0018\u0001\u0000\u0000\u0000\u008a\u008b\u0005/\u0000"+
		"\u0000\u008b\u001a\u0001\u0000\u0000\u0000\u008c\u008d\u0005%\u0000\u0000"+
		"\u008d\u001c\u0001\u0000\u0000\u0000\u008e\u008f\u0005=\u0000\u0000\u008f"+
		"\u001e\u0001\u0000\u0000\u0000\u0090\u0091\u0005+\u0000\u0000\u0091\u0092"+
		"\u0005=\u0000\u0000\u0092 \u0001\u0000\u0000\u0000\u0093\u0094\u0005-"+
		"\u0000\u0000\u0094\u0095\u0005=\u0000\u0000\u0095\"\u0001\u0000\u0000"+
		"\u0000\u0096\u0097\u0005*\u0000\u0000\u0097\u0098\u0005=\u0000\u0000\u0098"+
		"$\u0001\u0000\u0000\u0000\u0099\u009a\u0005/\u0000\u0000\u009a\u009b\u0005"+
		"=\u0000\u0000\u009b&\u0001\u0000\u0000\u0000\u009c\u009d\u0005<\u0000"+
		"\u0000\u009d(\u0001\u0000\u0000\u0000\u009e\u009f\u0005<\u0000\u0000\u009f"+
		"\u00a0\u0005=\u0000\u0000\u00a0*\u0001\u0000\u0000\u0000\u00a1\u00a2\u0005"+
		">\u0000\u0000\u00a2,\u0001\u0000\u0000\u0000\u00a3\u00a4\u0005>\u0000"+
		"\u0000\u00a4\u00a5\u0005+\u0000\u0000\u00a5.\u0001\u0000\u0000\u0000\u00a6"+
		"\u00a7\u0005=\u0000\u0000\u00a7\u00a8\u0005=\u0000\u0000\u00a80\u0001"+
		"\u0000\u0000\u0000\u00a9\u00aa\u0005!\u0000\u0000\u00aa\u00ab\u0005=\u0000"+
		"\u0000\u00ab2\u0001\u0000\u0000\u0000\u00ac\u00ad\u0005i\u0000\u0000\u00ad"+
		"\u00ae\u0005f\u0000\u0000\u00ae4\u0001\u0000\u0000\u0000\u00af\u00b0\u0005"+
		"e\u0000\u0000\u00b0\u00b1\u0005l\u0000\u0000\u00b1\u00b2\u0005s\u0000"+
		"\u0000\u00b2\u00b3\u0005e\u0000\u0000\u00b36\u0001\u0000\u0000\u0000\u00b4"+
		"\u00b5\u0005e\u0000\u0000\u00b5\u00b6\u0005l\u0000\u0000\u00b6\u00b7\u0005"+
		"i\u0000\u0000\u00b7\u00b8\u0005f\u0000\u0000\u00b88\u0001\u0000\u0000"+
		"\u0000\u00b9\u00ba\u0005w\u0000\u0000\u00ba\u00bb\u0005h\u0000\u0000\u00bb"+
		"\u00bc\u0005i\u0000\u0000\u00bc\u00bd\u0005l\u0000\u0000\u00bd\u00be\u0005"+
		"e\u0000\u0000\u00be:\u0001\u0000\u0000\u0000\u00bf\u00c0\u0005f\u0000"+
		"\u0000\u00c0\u00c1\u0005o\u0000\u0000\u00c1\u00c2\u0005r\u0000\u0000\u00c2"+
		"<\u0001\u0000\u0000\u0000\u00c3\u00c4\u0005a\u0000\u0000\u00c4\u00c5\u0005"+
		"n\u0000\u0000\u00c5\u00c6\u0005d\u0000\u0000\u00c6>\u0001\u0000\u0000"+
		"\u0000\u00c7\u00c8\u0005o\u0000\u0000\u00c8\u00c9\u0005r\u0000\u0000\u00c9"+
		"@\u0001\u0000\u0000\u0000\u00ca\u00cb\u0005n\u0000\u0000\u00cb\u00cc\u0005"+
		"o\u0000\u0000\u00cc\u00cd\u0005t\u0000\u0000\u00cdB\u0001\u0000\u0000"+
		"\u0000\u00ce\u00cf\u0005[\u0000\u0000\u00cfD\u0001\u0000\u0000\u0000\u00d0"+
		"\u00d1\u0005]\u0000\u0000\u00d1F\u0001\u0000\u0000\u0000\u00d2\u00d3\u0005"+
		"(\u0000\u0000\u00d3H\u0001\u0000\u0000\u0000\u00d4\u00d5\u0005)\u0000"+
		"\u0000\u00d5J\u0001\u0000\u0000\u0000\u00d6\u00d7\u0005#\u0000\u0000\u00d7"+
		"L\u0001\u0000\u0000\u0000\u00d8\u00d9\u0005\'\u0000\u0000\u00d9\u00da"+
		"\u0005\'\u0000\u0000\u00da\u00db\u0005\'\u0000\u0000\u00dbN\u0001\u0000"+
		"\u0000\u0000\u00dc\u00dd\u0005 \u0000\u0000\u00ddP\u0001\u0000\u0000\u0000"+
		"\u00de\u00df\u0005\t\u0000\u0000\u00dfR\u0001\u0000\u0000\u0000\u00e0"+
		"\u00e1\u0005\n\u0000\u0000\u00e1T\u0001\u0000\u0000\u0000\b\u0000_dkn"+
		"wy\u007f\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}